# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# trigger:
#   branches:
#     include:
#       - master
#   paths:
#     include:
#       - src/backend/*
#       - azure-pipelines-backend.yml

pool:
  vmImage: 'windows-latest'

steps:
- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: restore
    projects: src/backend/ToDoList.sln

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    projects: src/backend/ToDoList.sln
    arguments: '--configuration Release'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    projects: '**/*.UnitTests.csproj'
    arguments: '--configuration Release /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura'

- task: Palmmedia.reportgenerator.reportgenerator-build-release-task.reportgenerator@4
  displayName: ReportGenerator
  inputs:
    reports: '**/coverage.cobertura.xml'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage from **/coverage.cobertura.xml'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '**/coverage.cobertura.xml'
    reportDirectory: CoverageReport

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish'
  inputs:
    command: publish
    publishWebProjects: false
    projects: 'src\backend\ToDoList.WebApi\ToDoList.WebApi.csproj'
    arguments: '--configuration Release'
